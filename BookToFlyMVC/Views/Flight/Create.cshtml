@{
    ViewData["Title"] = "Add Flight";
}
@if (Context.Session.GetString("JWT_TOKEN") != null)
{
    @await Html.PartialAsync("~/Views/Admin/Header.cshtml")
    <div class="container flight-form">
        <h2 class="text-center">@ViewData["Title"]</h2>
        <div class="d-grid gap-2 d-md-flex justify-content-md">
            <a asp-controller="Admin" asp-action="Dashboard" class="btn btn-primary">Back</a>
        </div>
        <hr />

        <!-- Success Message -->
        @if (TempData["CreateSuccessMessage"] != null)
        {
            <div id="successMessage" class="alert alert-success">@TempData["CreateSuccessMessage"]</div>
        }

        <!-- Error Message -->
        @if (TempData["CreateErrorMessage"] != null)
        {
            <div id="errorMessage" class="alert alert-danger">@TempData["CreateErrorMessage"]</div>
        }

        <form asp-controller="Flight" asp-action="Create" method="post">
            <!-- Flight Type -->
            <div class="mb-3">
                <label for="flightType" class="form-label">Flight Type:</label>
                <select id="flightType" name="FlightType" class="form-control" required>
                    <option value="">Select Flight Type</option>
                    <option value="Domestic">Domestic</option>
                    <option value="International">International</option>
                </select>
            </div>

            <!-- Modified Flight Id with prefix handling -->
            <div class="mb-3">
                <label for="flightId" class="form-label">Flight Id:</label>
                <div class="input-group">
                    <span class="input-group-text" id="prefixDisplay">--</span>
                    <input type="text" id="flightId" name="FlightId" class="form-control" placeholder="Enter Flight Number"
                        required />
                </div>
            </div>

            <!-- Airline Name -->
            <div class="mb-3">
                <label for="airlineName" class="form-label">Airline Name:</label>
                <input type="text" id="airlineName" name="AirlineName" class="form-control" placeholder="Enter Airline Name"
                    required />
            </div>

            <!-- Source -->
            <div class="mb-3">
                <label for="source" class="form-label">Source:</label>
                <input type="text" id="source" name="Source" class="form-control"
                    placeholder="Enter Source Airport Code (e.g., JFK)" required />
            </div>

            <!-- Destination -->
            <div class="mb-3">
                <label for="destination" class="form-label">Destination:</label>
                <input type="text" id="destination" name="Destination" class="form-control"
                    placeholder="Enter Destination Airport Code (e.g., LHR)" required />
            </div>


            <!-- Departure Time -->
            <div class="mb-3">
                <label for="departureTime" class="form-label">Flight Starting Time:</label>
                <input type="time" id="departureTime" name="DepartureTime" class="form-control" required />
            </div>


            <!-- Araival Time -->
            <div class="mb-3">
                <label for="arrivalTime" class="form-label">Flight Reaching Time:</label>
                <input type="time" id="arrivalTime" name="ArrivalTime" class="form-control" required />
            </div>


            <!-- Modified Duration field -->
            <div class="mb-3">
                <label for="duration" class="form-label">Duration (in hours):</label>
                <input type="number" id="duration" name="Duration" class="form-control" step="0.1" required readonly />
            </div>

            <div class="mb-3">
                <label for="ticketPrice" class="form-label">Price (in Rupees):</label>
                <input type="number" id="ticketPrice" name="TicketPrice" class="form-control"
                    placeholder="Enter Ticket Price" step="0.01" required />
            </div>

            <!-- Available Seats -->
            <div class="mb-3">
                <label for="availableSeats" class="form-label">Available Seats:</label>
                <input type="number" id="availableSeats" name="AvailableSeats" class="form-control"
                    placeholder="Enter Number of Available Seats" required />
            </div>

            <!-- Available Days -->
            <div class="mb-3">
                <label class="form-label">Available Days:</label>
                <div class="d-flex flex-wrap gap-2 mt-2">
                    @foreach (var day in new[] { "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday",
                "Sunday" })
                    {
                        <div class="form-check">
                            <input type="checkbox" id="@day" name="AvailableDays" value="@day" class="form-check-input" />
                            <label for="@day" class="form-check-label">@day</label>
                        </div>
                    }
                </div>
            </div>

            <!-- Submit Button -->
            <div class="d-grid">
                <button type="submit" class="btn btn-primary">Add Flight</button>
            </div>
        </form>
    </div>
}
else
{
    @await Html.PartialAsync("~/Views/Home/Login.cshtml")
}

<script>
    // Duration calculation
    function calculateDuration() {
        const start = document.getElementById('departureTime').value;
        const end = document.getElementById('arrivalTime').value;
        
        if (start && end) {
            const startDate = new Date(`2000-01-01T${start}`);
            const endDate = new Date(`2000-01-01T${end}`);
            
            let diffHours = (endDate - startDate) / 1000 / 60 / 60;
            
            // Handle overnight flights
            if (diffHours < 0) diffHours += 24;
            
            document.getElementById('duration').value = diffHours.toFixed(1);
        }
    }

    // Flight ID prefix handling
    function updateFlightPrefix() {
        const flightType = document.getElementById('flightType');
        const prefixSpan = document.getElementById('prefixDisplay');
        const flightIdInput = document.getElementById('flightId');
        
        if (flightType.value === 'International') {
            prefixSpan.textContent = 'IF';
        } else {
            prefixSpan.textContent = 'DF';
        }
    }

    // Event listeners
    document.getElementById('departureTime').addEventListener('change', calculateDuration);
    document.getElementById('arrivalTime').addEventListener('change', calculateDuration);
    document.getElementById('flightType').addEventListener('change', updateFlightPrefix);

    // Initial setup
    updateFlightPrefix();
     // Hide success message after 3 seconds
    window.onload = function() {
        var successMessage = document.getElementById("successMessage");
        if (successMessage) {
            setTimeout(function() {
                successMessage.style.display = 'none';
            }, 2000); // 1000 milliseconds = 1 second
        }

        // Hide error message after 3 seconds
        var errorMessage = document.getElementById("errorMessage");
        if (errorMessage) {
            setTimeout(function() {
                errorMessage.style.display = 'none';
            }, 2000); // 1000 milliseconds = 1 second
        }
    };
</script>
