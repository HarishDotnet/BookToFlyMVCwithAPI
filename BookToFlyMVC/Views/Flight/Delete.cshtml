@await Html.PartialAsync("~/Views/Admin/Header.cshtml")

<div class="container mt-5">
    <div id="popupMessage" class="position-fixed top-0 start-50 translate-middle-x p-3 d-none" style="z-index: 1050;">
        <div id="popupContent" class="alert alert-dismissible fade show" role="alert"></div>
    </div>

    <div class="d-grid gap-2 d-md-flex justify-content-md">
        <a asp-controller="Admin" asp-action="Index" class="btn btn-primary">Back</a>
    </div>
    <hr />
    <div class="card shadow-sm">
        <div class="card-header text-center">
            <h5 class="card-title mb-0">Delete Flight</h5>
        </div>
        <div class="card-body">
            <div class="mb-3">
                <label for="FlightType" class="form-label">Flight Type <span class="text-danger">*</span></label>
                <select id="FlightType" name="FlightType" class="form-select" required>
                    <option value="" disabled selected>Select Type</option>
                    <option value="International">International</option>
                    <option value="Domestic">Domestic</option>
                </select>
                <div class="invalid-feedback">Please select a flight type.</div>
            </div>

            <div class="mb-3">
                <label for="flightNumber" class="form-label">Flight Number <span class="text-danger">*</span></label>
                <input type="text" id="flightNumber" name="flightNumber" class="form-control"
                    placeholder="Enter flight number" required autocomplete="off" onclick="showFlightSuggestions()" />
                <div class="invalid-feedback">Please enter a flight number.</div>

                <ul id="flightSuggestionsList" class="list-group position-absolute w-100"
                    style="display: none; max-height: 200px; overflow-y: auto; z-index: 1000; background-color: white; border: 1px solid #ccc;">
                </ul>
            </div>

            <a id="showCardBtn" class="btn btn-danger btn-sm w-100" onclick="flightDetailsLink()">
                <i class="bi bi-trash"></i> Delete Flight
            </a>

            <div class="overlay d-none position-fixed top-0 start-0 w-100 h-100 bg-dark opacity-50" id="overlay"></div>

            <div class="popup position-fixed top-50 start-50 translate-middle d-none" id="profilePopup">
                <div class="card" style="width: 25rem;">
                    <div class="card-body">
                        <h5 class="card-title text-center">Flight Details</h5>
                        <div id="flightDetailsContent">
                            <p>Flight Number: <span id="popupFlightNumber"></span></p>
                            <p>Flight Type: <span id="popupFlightType"></span></p>
                            <p>Airline: <span id="popupAirlineName"></span></p>
                            <p>Source: <span id="popupSource"></span></p>
                            <p>Destination: <span id="popupDestination"></span></p>
                            <p>Arrival Time: <span id="popupArrivalTime"></span></p>
                            <p>Departure Time: <span id="popupDepartureTime"></span></p>
                            <p>Duration: <span id="popupDuration"></span></p>
                            <p>Available Seats: <span id="popupAvailableSeats"></span></p>
                            <p>Ticket Price: <span id="popupTicketPrice"></span></p>
                            <p>Available Days: <span id="popupAvailableDays"></span></p>
                        </div>
                        <div class="text-center">
                            <form id="confirmDeleteForm" asp-action="ConfirmDelete" asp-controller="Flight"
                                method="post">
                                <input type="hidden" name="flightId" id="hiddenFlightId" />
                                <button type="submit" class="btn btn-danger me-2">Confirm Deletion</button>
                                <button type="button" class="btn btn-secondary" onclick="closePopup()">Cancel</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    let flightDetails = {};

    // Function to show the popup message (with automatic hide after 2 seconds)
    function showPopupMessage(message, alertClass) {
        const popupContainer = document.getElementById('popupMessage');
        const popupContent = document.getElementById('popupContent');

        // Set the message and alert class
        popupContent.textContent = message;
        popupContent.className = `alert ${alertClass} alert-dismissible fade show`;

        // Show the popup
        popupContainer.classList.remove('d-none');
        popupContainer.classList.add('show');

        // Automatically hide after 2 seconds with smooth fade out
        setTimeout(() => {
            popupContainer.classList.remove('show');
            setTimeout(() => popupContainer.classList.add('d-none'), 300);
        }, 2000);
    }

    // Check for TempData messages and show the popup if present
    document.addEventListener("DOMContentLoaded", function() {
        const successMessage = '@TempData["DeleteSuccessMessage"]';
        const errorMessage = '@TempData["DeleteErrorMessage"]';

        if (successMessage) {
            showPopupMessage(successMessage, 'alert-success');
        }

        if (errorMessage) {
            showPopupMessage(errorMessage, 'alert-danger');
        }
    });

    // Function to load flight details and display the popup
    async function loadFlightDetails(flightNumber) {
        const flightType = document.getElementById('FlightType').value;
        if (!flightNumber || !flightType) return;

        try {
            const response = await fetch(
                `http://localhost:5087/api/Flight/DisplayFlightByType?FlightType=${encodeURIComponent(flightType)}&flightNumber=${encodeURIComponent(flightNumber)}`
            );

            if (response.ok) {
                const data = await response.json();

                if (data && data.flightId) {
                    flightDetails = data;
                    document.getElementById('popupFlightNumber').textContent = flightDetails.flightId || 'N/A';
                    document.getElementById('popupFlightType').textContent = flightType || 'N/A';
                    document.getElementById('popupAirlineName').textContent = flightDetails.airlineName || 'N/A';
                    document.getElementById('popupSource').textContent = flightDetails.source || 'N/A';
                    document.getElementById('popupDestination').textContent = flightDetails.destination || 'N/A';
                    document.getElementById('popupArrivalTime').textContent = flightDetails.arrivalTime || 'N/A';
                    document.getElementById('popupDepartureTime').textContent = flightDetails.departureTime || 'N/A';
                    document.getElementById('popupDuration').textContent = flightDetails.duration || 'N/A';
                    document.getElementById('popupAvailableSeats').textContent = flightDetails.availableSeats || 'N/A';
                    document.getElementById('popupTicketPrice').textContent = flightDetails.ticketPrice || 'N/A';
                    document.getElementById('popupAvailableDays').textContent = flightDetails.availableDays?.join(', ') || 'N/A';

                    // Set flight ID in the hidden input
                    document.getElementById('hiddenFlightId').value = flightDetails.flightId;

                    // Show the popup
                    document.getElementById('profilePopup').classList.remove('d-none');
                    document.getElementById('overlay').classList.remove('d-none');
                } else {
                    showPopupMessage('Flight details not found.', 'alert-danger');
                }
            } else {
                showPopupMessage('Failed to fetch flight details.', 'alert-danger');
            }
        } catch (error) {
            showPopupMessage('Error loading flight details: ' + error, 'alert-danger');
        }
    }

    // Function to trigger popup display
    function flightDetailsLink() {
        const flightNumber = document.getElementById('flightNumber').value;
        if (flightNumber) {
            loadFlightDetails(flightNumber);
        } else {
            showPopupMessage('Please enter a flight number.', 'alert-warning');
        }
    }

    // Function to close the popup
    function closePopup() {
        document.getElementById('profilePopup').classList.add('d-none');
        document.getElementById('overlay').classList.add('d-none');
    }

    // Function to show flight suggestions
    async function showFlightSuggestions() {
        const flightType = document.getElementById('FlightType').value;
        const flightNumberInput = document.getElementById('flightNumber');
        const suggestionsList = document.getElementById('flightSuggestionsList');

        if (!flightType) {
            showPopupMessage('Please select a flight type first.', 'alert-warning');
            return;
        }

        try {
            const response = await fetch(`http://localhost:5087/api/Flight/DisplayAllFlightNumbersByType?FlightType=${encodeURIComponent(flightType)}`);
            if (response.ok) {
                const flightNumbers = await response.json();
                if (flightNumbers && flightNumbers.length > 0) {
                    suggestionsList.innerHTML = '';
                    flightNumbers.forEach(flight => {
                        const listItem = document.createElement('li');
                        listItem.classList.add('list-group-item', 'list-group-item-action');
                        listItem.textContent = flight;
                        listItem.onclick = function () {
                            flightNumberInput.value = flight;
                            suggestionsList.style.display = 'none';
                        };
                        suggestionsList.appendChild(listItem);
                    });
                    suggestionsList.style.display = 'block';
                } else {
                    suggestionsList.style.display = 'none';
                }
            } else {
                showPopupMessage('Failed to fetch flight numbers.', 'alert-danger');
            }
        } catch (error) {
            showPopupMessage('Error loading flight numbers: ' + error, 'alert-danger');
        }
    }

    // Close the suggestions list when clicking outside
    document.addEventListener('click', function (event) {
        const suggestionsList = document.getElementById('flightSuggestionsList');
        const flightNumberInput = document.getElementById('flightNumber');
        if (!suggestionsList.contains(event.target) && event.target !== flightNumberInput) {
            suggestionsList.style.display = 'none';
        }
    });

    // Ensure suggestions show when clicking input field
    document.getElementById('flightNumber').addEventListener('click', showFlightSuggestions);
</script>
